[28 17:22:43 330@env.py:meghair.train.env] WRN --fast-run not enabled; execution may be slow
[28 17:22:46 0@(unknown file):megbrain] create CompNode gpu0:0 from logical xpux:0
[28 17:22:46 0@(unknown file):megbrain] cuda: gpu0: name=`TITAN Xp' dyn_mem_reserve=0.00MiB alignment=0x200
[28 17:22:46 1021@opr.py:megbrain] create CompNode cpu0:0 from logical cpux:0
[28 17:22:46 195@fprop.py:megskull.graph.fprop] FpropEnv(train): start fprop VarNode(owner_opr=weight_decay(loss){WeightDecay@0x7f7f26707f98})
[28 17:22:46 161@fprop.py:megskull.graph.fprop] init FpropEnv(train) rng using random seed 2674914893
[28 17:22:46 1231@opr.py:megbrain] WRN dtype of index in IndexingOneHot must be Int32, got Float32 for variable label; convert to Int32 implicitly
[28 17:22:46 962@regularizer.py:megskull.opr.regularizer] weight decay:
 conv1:W: 0.0001
 conv2:W: 0.0001
 conv3:W: 0.0001
 conv4:W: 0.0001
 conv5:W: 0.0001
 conv6:W: 0.0001
 conv7:W: 0.0001
 conv8:W: 0.0001
 conv9:W: 0.0001
 conv10:W: 0.0001
 conv11:W: 0.0001
 conv12:W: 0.0001
 conv13:W: 0.0001
 conv14:W: 0.0001
 conv15:W: 0.0001
 conv16:W: 0.0001
 conv17:W: 0.0001
 conv18:W: 0.0001
 conv19:W: 0.0001
 conv20:W: 0.0001
 conv21:W: 0.0001
 fc0:W: 0.0001
[28 17:22:46 54@param_init.py:megskull.opr.helper.param_init] start automatic initilization for 44 params
[28 17:22:46 60@param_init.py:megskull.opr.helper.param_init] finished param initilization:
 conv1:W{Conv2D}: from Gaussian with std=0.2722, use sqrt(2/fan_in) for ReLU
 conv2:W{Conv2D}: from Gaussian with std=0.1179, use sqrt(2/fan_in) for ReLU
 conv3:W{Conv2D}: from Gaussian with std=0.1179, use sqrt(2/fan_in) for ReLU
 conv4:W{Conv2D}: from Gaussian with std=0.1179, use sqrt(2/fan_in) for ReLU
 conv5:W{Conv2D}: from Gaussian with std=0.1179, use sqrt(2/fan_in) for ReLU
 conv6:W{Conv2D}: from Gaussian with std=0.1179, use sqrt(2/fan_in) for ReLU
 conv7:W{Conv2D}: from Gaussian with std=0.1179, use sqrt(2/fan_in) for ReLU
 conv8:W{Conv2D}: from Gaussian with std=0.1179, use sqrt(2/fan_in) for ReLU
 conv9:W{Conv2D}: from Gaussian with std=0.0833, use sqrt(2/fan_in) for ReLU
 conv10:W{Conv2D}: from Gaussian with std=0.3536, use sqrt(2/fan_in) for ReLU
 conv11:W{Conv2D}: from Gaussian with std=0.0833, use sqrt(2/fan_in) for ReLU
 conv12:W{Conv2D}: from Gaussian with std=0.0833, use sqrt(2/fan_in) for ReLU
 conv13:W{Conv2D}: from Gaussian with std=0.0833, use sqrt(2/fan_in) for ReLU
 conv14:W{Conv2D}: from Gaussian with std=0.0833, use sqrt(2/fan_in) for ReLU
 conv15:W{Conv2D}: from Gaussian with std=0.0833, use sqrt(2/fan_in) for ReLU
 conv16:W{Conv2D}: from Gaussian with std=0.0589, use sqrt(2/fan_in) for ReLU
 conv17:W{Conv2D}: from Gaussian with std=0.2500, use sqrt(2/fan_in) for ReLU
 conv18:W{Conv2D}: from Gaussian with std=0.0589, use sqrt(2/fan_in) for ReLU
 conv19:W{Conv2D}: from Gaussian with std=0.0589, use sqrt(2/fan_in) for ReLU
 conv20:W{Conv2D}: from Gaussian with std=0.0589, use sqrt(2/fan_in) for ReLU
 conv21:W{Conv2D}: from Gaussian with std=0.0589, use sqrt(2/fan_in) for ReLU
 fc0:W{FullyConnected}: from Gaussian with std=0.1250
[28 17:22:47 1231@opr.py:megbrain] WRN dtype of index in IndexingOneHot must be Int32, got Float32 for variable label; convert to Int32 implicitly
[28 17:22:47 272@fprop.py:megskull.graph.fprop] FpropEnv(train): shapes of var nodes:
 data: (128, 3, 32, 32)
 label: (128)
 conv1: (128, 16, 32, 32)
 bn1: (128, 16, 32, 32)
 conv2: (128, 16, 32, 32)
 bn2: (128, 16, 32, 32)
 conv3: (128, 16, 32, 32)
 bn3: (128, 16, 32, 32)
 conv4: (128, 16, 32, 32)
 bn4: (128, 16, 32, 32)
 conv5: (128, 16, 32, 32)
 bn5: (128, 16, 32, 32)
 conv6: (128, 16, 32, 32)
 bn6: (128, 16, 32, 32)
 conv7: (128, 16, 32, 32)
 bn7: (128, 16, 32, 32)
 conv8: (128, 32, 16, 16)
 bn8: (128, 32, 16, 16)
 conv9: (128, 32, 16, 16)
 bn9: (128, 32, 16, 16)
 conv10: (128, 32, 16, 16)
 bn10: (128, 32, 16, 16)
 conv11: (128, 32, 16, 16)
 bn11: (128, 32, 16, 16)
 conv12: (128, 32, 16, 16)
 bn12: (128, 32, 16, 16)
 conv13: (128, 32, 16, 16)
 bn13: (128, 32, 16, 16)
 conv14: (128, 32, 16, 16)
 bn14: (128, 32, 16, 16)
 conv15: (128, 64, 8, 8)
 bn15: (128, 64, 8, 8)
 conv16: (128, 64, 8, 8)
 bn16: (128, 64, 8, 8)
 conv17: (128, 64, 8, 8)
 bn17: (128, 64, 8, 8)
 conv18: (128, 64, 8, 8)
 bn18: (128, 64, 8, 8)
 conv19: (128, 64, 8, 8)
 bn19: (128, 64, 8, 8)
 conv20: (128, 64, 8, 8)
 bn20: (128, 64, 8, 8)
 conv21: (128, 64, 8, 8)
 bn21: (128, 64, 8, 8)
 fc0: (128, 10)
 pred: (128, 10)
 loss: (1)
 weight_decay(loss): (1)
[28 17:22:47 195@fprop.py:megskull.graph.fprop] FpropEnv(val): start fprop VarNode(owner_opr=weight_decay(loss){WeightDecay@0x7f7f26707f98})
[28 17:22:47 1231@opr.py:megbrain] WRN dtype of index in IndexingOneHot must be Int32, got Float32 for variable label; convert to Int32 implicitly
[28 17:22:47 962@regularizer.py:megskull.opr.regularizer] weight decay:
 conv1:W: 0.0001
 conv2:W: 0.0001
 conv3:W: 0.0001
 conv4:W: 0.0001
 conv5:W: 0.0001
 conv6:W: 0.0001
 conv7:W: 0.0001
 conv8:W: 0.0001
 conv9:W: 0.0001
 conv10:W: 0.0001
 conv11:W: 0.0001
 conv12:W: 0.0001
 conv13:W: 0.0001
 conv14:W: 0.0001
 conv15:W: 0.0001
 conv16:W: 0.0001
 conv17:W: 0.0001
 conv18:W: 0.0001
 conv19:W: 0.0001
 conv20:W: 0.0001
 conv21:W: 0.0001
 fc0:W: 0.0001
[28 17:22:47 272@fprop.py:megskull.graph.fprop] FpropEnv(val): shapes of var nodes:
 data: (128, 3, 32, 32)
 label: (128)
 conv1: (128, 16, 32, 32)
 bn1: (128, 16, 32, 32)
 conv2: (128, 16, 32, 32)
 bn2: (128, 16, 32, 32)
 conv3: (128, 16, 32, 32)
 bn3: (128, 16, 32, 32)
 conv4: (128, 16, 32, 32)
 bn4: (128, 16, 32, 32)
 conv5: (128, 16, 32, 32)
 bn5: (128, 16, 32, 32)
 conv6: (128, 16, 32, 32)
 bn6: (128, 16, 32, 32)
 conv7: (128, 16, 32, 32)
 bn7: (128, 16, 32, 32)
 conv8: (128, 32, 16, 16)
 bn8: (128, 32, 16, 16)
 conv9: (128, 32, 16, 16)
 bn9: (128, 32, 16, 16)
 conv10: (128, 32, 16, 16)
 bn10: (128, 32, 16, 16)
 conv11: (128, 32, 16, 16)
 bn11: (128, 32, 16, 16)
 conv12: (128, 32, 16, 16)
 bn12: (128, 32, 16, 16)
 conv13: (128, 32, 16, 16)
 bn13: (128, 32, 16, 16)
 conv14: (128, 32, 16, 16)
 bn14: (128, 32, 16, 16)
 conv15: (128, 64, 8, 8)
 bn15: (128, 64, 8, 8)
 conv16: (128, 64, 8, 8)
 bn16: (128, 64, 8, 8)
 conv17: (128, 64, 8, 8)
 bn17: (128, 64, 8, 8)
 conv18: (128, 64, 8, 8)
 bn18: (128, 64, 8, 8)
 conv19: (128, 64, 8, 8)
 bn19: (128, 64, 8, 8)
 conv20: (128, 64, 8, 8)
 bn20: (128, 64, 8, 8)
 conv21: (128, 64, 8, 8)
 bn21: (128, 64, 8, 8)
 fc0: (128, 10)
 pred: (128, 10)
 loss: (1)
 weight_decay(loss): (1)
[28 17:22:47 245@base.py:megskull.optimizer.base] params to train:
 conv1:W: (16, 3, 3, 3) dim=432 cn=gpu0:0
 conv1:b: (16,) dim=16 cn=gpu0:0
 conv2:W: (16, 16, 3, 3) dim=2304 cn=gpu0:0
 conv2:b: (16,) dim=16 cn=gpu0:0
 conv3:W: (16, 16, 3, 3) dim=2304 cn=gpu0:0
 conv3:b: (16,) dim=16 cn=gpu0:0
 conv4:W: (16, 16, 3, 3) dim=2304 cn=gpu0:0
 conv4:b: (16,) dim=16 cn=gpu0:0
 conv5:W: (16, 16, 3, 3) dim=2304 cn=gpu0:0
 conv5:b: (16,) dim=16 cn=gpu0:0
 conv6:W: (16, 16, 3, 3) dim=2304 cn=gpu0:0
 conv6:b: (16,) dim=16 cn=gpu0:0
 conv7:W: (16, 16, 3, 3) dim=2304 cn=gpu0:0
 conv7:b: (16,) dim=16 cn=gpu0:0
 conv8:W: (32, 16, 3, 3) dim=4608 cn=gpu0:0
 conv8:b: (32,) dim=32 cn=gpu0:0
 conv9:W: (32, 32, 3, 3) dim=9216 cn=gpu0:0
 conv9:b: (32,) dim=32 cn=gpu0:0
 conv10:W: (32, 16, 1, 1) dim=512 cn=gpu0:0
 conv10:b: (32,) dim=32 cn=gpu0:0
 conv11:W: (32, 32, 3, 3) dim=9216 cn=gpu0:0
 conv11:b: (32,) dim=32 cn=gpu0:0
 conv12:W: (32, 32, 3, 3) dim=9216 cn=gpu0:0
 conv12:b: (32,) dim=32 cn=gpu0:0
 conv13:W: (32, 32, 3, 3) dim=9216 cn=gpu0:0
 conv13:b: (32,) dim=32 cn=gpu0:0
 conv14:W: (32, 32, 3, 3) dim=9216 cn=gpu0:0
 conv14:b: (32,) dim=32 cn=gpu0:0
 conv15:W: (64, 32, 3, 3) dim=18432 cn=gpu0:0
 conv15:b: (64,) dim=64 cn=gpu0:0
 conv16:W: (64, 64, 3, 3) dim=36864 cn=gpu0:0
 conv16:b: (64,) dim=64 cn=gpu0:0
 conv17:W: (64, 32, 1, 1) dim=2048 cn=gpu0:0
 conv17:b: (64,) dim=64 cn=gpu0:0
 conv18:W: (64, 64, 3, 3) dim=36864 cn=gpu0:0
 conv18:b: (64,) dim=64 cn=gpu0:0
 conv19:W: (64, 64, 3, 3) dim=36864 cn=gpu0:0
 conv19:b: (64,) dim=64 cn=gpu0:0
 conv20:W: (64, 64, 3, 3) dim=36864 cn=gpu0:0
 conv20:b: (64,) dim=64 cn=gpu0:0
 conv21:W: (64, 64, 3, 3) dim=36864 cn=gpu0:0
 conv21:b: (64,) dim=64 cn=gpu0:0
 fc0:W: (64, 10) dim=640 cn=gpu0:0
 fc0:b: (10,) dim=10 cn=gpu0:0
 total_dim=271690 (0.26M)
[28 17:22:47 991@mgb.py:megbrain] graph optimization: applied 16 passes, total 15334 var(s) replaced; time=159.72ms
[28 17:22:47 991@mgb.py:megbrain] opr seq of length 1580: var_static=1907 var_dynamic_shape=0 var_dynamic_storage=0 no_sys_alloc=0
[28 17:22:47 991@mgb.py:megbrain] graph optimization: applied 8 passes, total 1547 var(s) replaced; time=16.09ms
[28 17:22:47 991@mgb.py:megbrain] opr seq of length 448: var_static=499 var_dynamic_shape=0 var_dynamic_storage=0 no_sys_alloc=0
[28 17:22:57 746@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    203.62MiB( 213513216bytes)    195.68MiB( 96.10%)    956.97MiB(469.98%)
[28 17:22:57 746@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=8226.32
[28 17:22:57 746@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0    203.68MiB( 213571584bytes)    195.68MiB( 96.07%)    959.26MiB(470.97%)
[28 17:22:57 746@mgb.py:megbrain] static mem alloc: nr_opr=1580 nr_var=1907 realtime=21.07msec(si0.90 mp+re11.54 omp0.85 alloc7.79)
[28 17:26:44 189@env.py:meghair.train.env] Saving checkpoint to file data/resnet20.data.351
[28 17:26:44 204@env.py:meghair.train.env] Save checkpoint to file data/resnet20.data.351, Time usage:
	prepare snapshot: 0.0027618408203125, IO: 0.15209579467773438
[28 17:26:45 746@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0     24.03MiB(  25192448bytes)     24.02MiB(100.00%)    332.11MiB(1382.32%)
[28 17:26:45 746@mgb.py:megbrain] determined workspace size limit upper bound and reallocate static memory; bounds(MiB): gpu0:0=8405.59
[28 17:26:45 746@mgb.py:megbrain] static memory allocation:
 comp_node           alloc                      lower_bound         upper_bound
   gpu0:0     24.06MiB(  25225216bytes)     24.06MiB(100.00%)    332.63MiB(1382.69%)
[28 17:26:45 746@mgb.py:megbrain] static mem alloc: nr_opr=448 nr_var=499 realtime=4.50msec(si0.24 mp+re2.92 omp0.14 alloc1.21)
[28 17:26:45 189@env.py:meghair.train.env] Saving checkpoint to file data/resnet20.data.bestmodel
[28 17:26:46 204@env.py:meghair.train.env] Save checkpoint to file data/resnet20.data.bestmodel, Time usage:
	prepare snapshot: 0.0017476081848144531, IO: 0.20991253852844238
[28 17:28:42 344@env.py:meghair.train.env] WRN A exception occurred during WorkingEnv initialization, give up running process
[28 17:28:42 0@(unknown file):megbrain] WRN cuda comp node method called after global finalize
